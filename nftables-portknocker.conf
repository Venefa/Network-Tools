#!/usr/sbin/nft -f

flush ruleset

table inet filter {
	define ssh_knock_1 = 10000
	define ssh_knock_2 = 2345
	define ssh_knock_3 = 3456
	define ssh_knock_4 = 1234
	define ssh_service_port = 22
	
	set ssh_progress_ipv4{
		type ipv4_addr . inet_service;
		flags timeout;
	}

	set ssh_clients_ipv4 {
		type ipv4_addr;
		flags timeout;
	}
	
	chain input {
		type filter hook input priority 0;policy drop;
		iif lo accept
		ct state {established, related } accept
		#iifname "vmbr0" tcp dport ssh accept #rule to allow ssh without knock
		icmp type echo-request accept
		iifname "vmbr0" tcp dport https accept
		iifname "vmbr0" tcp dport http accept
		iifname "vmbr0" tcp dport 8006 accept
		tcp dport $ssh_knock_1 update @ssh_progress_ipv4 { ip saddr . $ssh_knock_2 timeout 5s } drop
		tcp dport $ssh_knock_2 ip saddr . tcp dport @ssh_progress_ipv4 update @ssh_progress_ipv4 { ip saddr . $ssh_knock_3 timeout 5s } drop
		tcp dport $ssh_knock_3 ip saddr . tcp dport @ssh_progress_ipv4 update @ssh_progress_ipv4 { ip saddr . $ssh_knock_4 timeout 5s } drop
		tcp dport $ssh_knock_4 ip saddr . tcp dport @ssh_progress_ipv4 update @ssh_clients_ipv4 {ip saddr timeout 10s} drop
		ip saddr @ssh_clients_ipv4 tcp dport $ssh_service_port ct state new accept
	}
	chain forward {
		type filter hook forward priority 0;policy drop;
		ct state {established, related } accept
		iifname "vmbr1" oifname "vmbr0" accept
	}
}

table ip nat {
	chain postrouting {
		type nat hook postrouting priority 100; policy accept;
		oifname "vmbr0" ip saddr {192.168.1.0/24} masquerade
	}
}
